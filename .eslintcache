[{"C:\\React\\material-kit-react-main\\src\\index.js":"1","C:\\React\\material-kit-react-main\\src\\serviceWorker.js":"2","C:\\React\\material-kit-react-main\\src\\App.js":"3","C:\\React\\material-kit-react-main\\src\\routes.js":"4","C:\\React\\material-kit-react-main\\src\\components\\GlobalStyles.js":"5","C:\\React\\material-kit-react-main\\src\\mixins\\chartjs.js":"6","C:\\React\\material-kit-react-main\\src\\theme\\index.js":"7","C:\\React\\material-kit-react-main\\src\\views\\auth\\LoginView.js":"8","C:\\React\\material-kit-react-main\\src\\views\\master\\EmployeeMaster\\listEmployee.js":"9","C:\\React\\material-kit-react-main\\src\\views\\errors\\NotFoundView.js":"10","C:\\React\\material-kit-react-main\\src\\views\\auth\\RegisterView.js":"11","C:\\React\\material-kit-react-main\\src\\theme\\typography.js":"12","C:\\React\\material-kit-react-main\\src\\layouts\\MainLayout\\index.js":"13","C:\\React\\material-kit-react-main\\src\\layouts\\DashboardLayout\\index.js":"14","C:\\React\\material-kit-react-main\\src\\views\\master\\GlobalView\\index.js":"15","C:\\React\\material-kit-react-main\\src\\theme\\shadows.js":"16","C:\\React\\material-kit-react-main\\src\\views\\account\\AccountView\\index.js":"17","C:\\React\\material-kit-react-main\\src\\views\\product\\ProductListView\\index.js":"18","C:\\React\\material-kit-react-main\\src\\views\\customer\\CustomerListView\\index.js":"19","C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\index.js":"20","C:\\React\\material-kit-react-main\\src\\views\\settings\\SettingsView\\index.js":"21","C:\\React\\material-kit-react-main\\src\\components\\Page.js":"22","C:\\React\\material-kit-react-main\\src\\views\\master\\EmployeeMaster\\BreadCrumList.js":"23","C:\\React\\material-kit-react-main\\src\\views\\master\\EmployeeMaster\\Toolbar.js":"24","C:\\React\\material-kit-react-main\\src\\views\\master\\EmployeeMaster\\TableList.js":"25","C:\\React\\material-kit-react-main\\src\\views\\master\\GlobalView\\BreadCrum.js":"26","C:\\React\\material-kit-react-main\\src\\views\\master\\GlobalView\\Tabs.js":"27","C:\\React\\material-kit-react-main\\src\\views\\settings\\SettingsView\\Password.js":"28","C:\\React\\material-kit-react-main\\src\\views\\settings\\SettingsView\\Notifications.js":"29","C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\TrafficByDevice.js":"30","C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\TotalCustomers.js":"31","C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\TotalProfit.js":"32","C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\TasksProgress.js":"33","C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\BreadCrum.js":"34","C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\Sales.js":"35","C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\LatestProducts.js":"36","C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\LatestOrders.js":"37","C:\\React\\material-kit-react-main\\src\\views\\master\\EmployeeMaster\\Entry.js":"38","C:\\React\\material-kit-react-main\\src\\views\\master\\EmployeeMaster\\sideOptions.js":"39","C:\\React\\material-kit-react-main\\src\\views\\account\\AccountView\\Profile.js":"40","C:\\React\\material-kit-react-main\\src\\views\\master\\EmployeeMaster\\Form.js":"41","C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\Budget.js":"42","C:\\React\\material-kit-react-main\\src\\views\\product\\ProductListView\\data.js":"43","C:\\React\\material-kit-react-main\\src\\views\\customer\\CustomerListView\\data.js":"44","C:\\React\\material-kit-react-main\\src\\views\\customer\\CustomerListView\\Results.js":"45","C:\\React\\material-kit-react-main\\src\\views\\customer\\CustomerListView\\Toolbar.js":"46","C:\\React\\material-kit-react-main\\src\\views\\product\\ProductListView\\ProductCard.js":"47","C:\\React\\material-kit-react-main\\src\\views\\product\\ProductListView\\Toolbar.js":"48","C:\\React\\material-kit-react-main\\src\\views\\account\\AccountView\\ProfileDetails.js":"49","C:\\React\\material-kit-react-main\\src\\layouts\\MainLayout\\TopBar.js":"50","C:\\React\\material-kit-react-main\\src\\layouts\\DashboardLayout\\TopBar.js":"51","C:\\React\\material-kit-react-main\\src\\utils\\getInitials.js":"52","C:\\React\\material-kit-react-main\\src\\layouts\\DashboardLayout\\NavBar\\index.js":"53","C:\\React\\material-kit-react-main\\src\\components\\Logo.js":"54","C:\\React\\material-kit-react-main\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js":"55","C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\Entry.js":"56","C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\sideOptions.js":"57","C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\Form.js":"58","C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\Entry.js":"59","C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\Form.js":"60","C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\sideOptions.js":"61","C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\Entry.js":"62","C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\Form.js":"63","C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\sideOptions.js":"64","C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\listEmployee.js":"65","C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\TableList.js":"66","C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\Toolbar.js":"67","C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\BreadCrumList.js":"68","C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\listEmployee.js":"69","C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\TableList.js":"70","C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\Toolbar.js":"71","C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\BreadCrumList.js":"72","C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\listEmployee.js":"73","C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\BreadCrumList.js":"74","C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\Toolbar.js":"75","C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\TableList.js":"76","C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\Edit.js":"77","C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\EditForm.js":"78","C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\EditBreadcrumbs.js":"79","C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\EditTollbar.js":"80","C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\Edit.js":"81","C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\EditForm.js":"82","C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\EditBreadcrumbs.js":"83","C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\EditTollbar.js":"84","C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\Edit.js":"85","C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\EditTollbar.js":"86","C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\EditForm.js":"87","C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\EditBreadcrumbs.js":"88"},{"size":320,"mtime":1608802553000,"results":"89","hashOfConfig":"90"},{"size":4953,"mtime":1608802553000,"results":"91","hashOfConfig":"90"},{"size":520,"mtime":1608802553000,"results":"92","hashOfConfig":"90"},{"size":3770,"mtime":1612939723700,"results":"93","hashOfConfig":"90"},{"size":726,"mtime":1612252234108,"results":"94","hashOfConfig":"90"},{"size":5586,"mtime":1608802553000,"results":"95","hashOfConfig":"90"},{"size":551,"mtime":1608802553000,"results":"96","hashOfConfig":"90"},{"size":5441,"mtime":1613146646461,"results":"97","hashOfConfig":"90"},{"size":1149,"mtime":1611259559766,"results":"98","hashOfConfig":"90"},{"size":1547,"mtime":1608802553000,"results":"99","hashOfConfig":"90"},{"size":6433,"mtime":1611257926475,"results":"100","hashOfConfig":"90"},{"size":544,"mtime":1608802553000,"results":"101","hashOfConfig":"90"},{"size":1224,"mtime":1612257653194,"results":"102","hashOfConfig":"90"},{"size":1343,"mtime":1611240808899,"results":"103","hashOfConfig":"90"},{"size":977,"mtime":1612264666113,"results":"104","hashOfConfig":"90"},{"size":1618,"mtime":1608802553000,"results":"105","hashOfConfig":"90"},{"size":1038,"mtime":1608802553000,"results":"106","hashOfConfig":"90"},{"size":1583,"mtime":1608802553000,"results":"107","hashOfConfig":"90"},{"size":846,"mtime":1608802553000,"results":"108","hashOfConfig":"90"},{"size":2615,"mtime":1611242444178,"results":"109","hashOfConfig":"90"},{"size":754,"mtime":1611256784568,"results":"110","hashOfConfig":"90"},{"size":462,"mtime":1608802553000,"results":"111","hashOfConfig":"90"},{"size":1579,"mtime":1611259696348,"results":"112","hashOfConfig":"90"},{"size":3002,"mtime":1612251982060,"results":"113","hashOfConfig":"90"},{"size":16782,"mtime":1612940845307,"results":"114","hashOfConfig":"90"},{"size":1315,"mtime":1611249606287,"results":"115","hashOfConfig":"90"},{"size":3361,"mtime":1612710237601,"results":"116","hashOfConfig":"90"},{"size":1765,"mtime":1608802553000,"results":"117","hashOfConfig":"90"},{"size":3107,"mtime":1608802553000,"results":"118","hashOfConfig":"90"},{"size":3155,"mtime":1608802553000,"results":"119","hashOfConfig":"90"},{"size":2078,"mtime":1608802553000,"results":"120","hashOfConfig":"90"},{"size":1382,"mtime":1608802553000,"results":"121","hashOfConfig":"90"},{"size":1555,"mtime":1608802553000,"results":"122","hashOfConfig":"90"},{"size":855,"mtime":1611258039794,"results":"123","hashOfConfig":"90"},{"size":3288,"mtime":1608802553000,"results":"124","hashOfConfig":"90"},{"size":2778,"mtime":1608802553000,"results":"125","hashOfConfig":"90"},{"size":3952,"mtime":1608802553000,"results":"126","hashOfConfig":"90"},{"size":1781,"mtime":1612270365041,"results":"127","hashOfConfig":"90"},{"size":5835,"mtime":1612273691001,"results":"128","hashOfConfig":"90"},{"size":1838,"mtime":1608802553000,"results":"129","hashOfConfig":"90"},{"size":57787,"mtime":1612948305241,"results":"130","hashOfConfig":"90"},{"size":2036,"mtime":1608802553000,"results":"131","hashOfConfig":"90"},{"size":1663,"mtime":1608802553000,"results":"132","hashOfConfig":"90"},{"size":3362,"mtime":1608802553000,"results":"133","hashOfConfig":"90"},{"size":5494,"mtime":1608802553000,"results":"134","hashOfConfig":"90"},{"size":1816,"mtime":1608802553000,"results":"135","hashOfConfig":"90"},{"size":2569,"mtime":1608802553000,"results":"136","hashOfConfig":"90"},{"size":1814,"mtime":1608802553000,"results":"137","hashOfConfig":"90"},{"size":4421,"mtime":1608802553000,"results":"138","hashOfConfig":"90"},{"size":758,"mtime":1608802553000,"results":"139","hashOfConfig":"90"},{"size":5089,"mtime":1612270023946,"results":"140","hashOfConfig":"90"},{"size":139,"mtime":1608802553000,"results":"141","hashOfConfig":"90"},{"size":6055,"mtime":1612766931678,"results":"142","hashOfConfig":"90"},{"size":174,"mtime":1608802553000,"results":"143","hashOfConfig":"90"},{"size":1637,"mtime":1611256534309,"results":"144","hashOfConfig":"90"},{"size":1781,"mtime":1612270365041,"results":"145","hashOfConfig":"90"},{"size":5827,"mtime":1612768727977,"results":"146","hashOfConfig":"90"},{"size":5618,"mtime":1612795055215,"results":"147","hashOfConfig":"90"},{"size":1781,"mtime":1612270365041,"results":"148","hashOfConfig":"90"},{"size":5585,"mtime":1612795129193,"results":"149","hashOfConfig":"90"},{"size":5839,"mtime":1612769055054,"results":"150","hashOfConfig":"90"},{"size":1781,"mtime":1612270365041,"results":"151","hashOfConfig":"90"},{"size":5589,"mtime":1612795176716,"results":"152","hashOfConfig":"90"},{"size":5841,"mtime":1612773632283,"results":"153","hashOfConfig":"90"},{"size":1149,"mtime":1611259559766,"results":"154","hashOfConfig":"90"},{"size":3886,"mtime":1612940290609,"results":"155","hashOfConfig":"90"},{"size":2998,"mtime":1612768223432,"results":"156","hashOfConfig":"90"},{"size":1571,"mtime":1612715307993,"results":"157","hashOfConfig":"90"},{"size":1149,"mtime":1611259559766,"results":"158","hashOfConfig":"90"},{"size":2633,"mtime":1612940306948,"results":"159","hashOfConfig":"90"},{"size":3004,"mtime":1612769120930,"results":"160","hashOfConfig":"90"},{"size":1583,"mtime":1612769073686,"results":"161","hashOfConfig":"90"},{"size":1149,"mtime":1611259559766,"results":"162","hashOfConfig":"90"},{"size":1602,"mtime":1612773895373,"results":"163","hashOfConfig":"90"},{"size":3005,"mtime":1612773815066,"results":"164","hashOfConfig":"90"},{"size":16583,"mtime":1612940269258,"results":"165","hashOfConfig":"90"},{"size":1826,"mtime":1612935435336,"results":"166","hashOfConfig":"90"},{"size":6528,"mtime":1612938413074,"results":"167","hashOfConfig":"90"},{"size":1680,"mtime":1612935965724,"results":"168","hashOfConfig":"90"},{"size":3146,"mtime":1612935511180,"results":"169","hashOfConfig":"90"},{"size":1826,"mtime":1612935435336,"results":"170","hashOfConfig":"90"},{"size":6554,"mtime":1612940202335,"results":"171","hashOfConfig":"90"},{"size":1698,"mtime":1612940075753,"results":"172","hashOfConfig":"90"},{"size":3158,"mtime":1612940041558,"results":"173","hashOfConfig":"90"},{"size":1826,"mtime":1612935435336,"results":"174","hashOfConfig":"90"},{"size":3160,"mtime":1612939988951,"results":"175","hashOfConfig":"90"},{"size":6559,"mtime":1612939903966,"results":"176","hashOfConfig":"90"},{"size":1701,"mtime":1612939936971,"results":"177","hashOfConfig":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"y59os4",{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"180"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"180"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"180"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"180"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"180"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"180"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"180"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"180"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"C:\\React\\material-kit-react-main\\src\\index.js",[],["364","365","366","367","368","369"],"C:\\React\\material-kit-react-main\\src\\serviceWorker.js",[],"C:\\React\\material-kit-react-main\\src\\App.js",[],"C:\\React\\material-kit-react-main\\src\\routes.js",[],"C:\\React\\material-kit-react-main\\src\\components\\GlobalStyles.js",[],"C:\\React\\material-kit-react-main\\src\\mixins\\chartjs.js",[],"C:\\React\\material-kit-react-main\\src\\theme\\index.js",[],"C:\\React\\material-kit-react-main\\src\\views\\auth\\LoginView.js",["370","371"],"/* eslint-disable no-unused-vars */\n/* eslint-disable no-multiple-empty-lines */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable no-restricted-globals */\n/* eslint-disable prefer-template */\n/* eslint-disable arrow-parens */\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport axios from 'axios';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>\n      {''}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.info.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    email: '',\n    password: '',\n\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // localStorage.setItem('url', 'http://127.0.0.1:8000/');\n    localStorage.setItem('url', 'http://dev.swirlitsolutions.com/payrool/');\n    console.log(e.target.user_name.value);\n    \n    const URL = localStorage.getItem('url');\n    axios.post(URL + 'api/log-in', values)\n      .then(respomse => {\n        console.log(respomse);\n        if (respomse.data.status === '400') {\n          alert('Not found');\n        } else {\n          localStorage.setItem('id', respomse.data.id);\n          localStorage.setItem('time', respomse.data.time);\n          localStorage.setItem('username', respomse.data.username);\n          if (respomse.data.username === 'admin') {\n            localStorage.setItem('user_role', 'Super Admin');\n          } else {\n            localStorage.setItem('user_role', 'N.A');\n          }\n          \n          // window.location.reload(true);\n          navigate('/app/dashboard', { replace: true });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        alert('Internal Server error');\n      });\n  };\n\n  const getData = (e) => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n\n  const username = localStorage.getItem('username');\n  if (username != null) {\n    navigate('/app/dashboard', { replace: true });\n  }\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form onSubmit={handleSubmit} className={classes.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"user_name\"\n            label=\"User ID\"\n            name=\"user_name\"\n            value={values.user_name}\n            onChange={getData}\n            autoComplete=\"user_name\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            onChange={getData}\n            value={values.password}\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" checked color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              {/* <Link href=\"#\" variant=\"body2\">\n                Don&apos;t have an account? Sign Up\n              </Link> */}\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","C:\\React\\material-kit-react-main\\src\\views\\master\\EmployeeMaster\\listEmployee.js",[],"C:\\React\\material-kit-react-main\\src\\views\\errors\\NotFoundView.js",[],"C:\\React\\material-kit-react-main\\src\\views\\auth\\RegisterView.js",[],"C:\\React\\material-kit-react-main\\src\\theme\\typography.js",[],"C:\\React\\material-kit-react-main\\src\\layouts\\MainLayout\\index.js",[],"C:\\React\\material-kit-react-main\\src\\layouts\\DashboardLayout\\index.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\GlobalView\\index.js",[],"C:\\React\\material-kit-react-main\\src\\theme\\shadows.js",[],"C:\\React\\material-kit-react-main\\src\\views\\account\\AccountView\\index.js",[],"C:\\React\\material-kit-react-main\\src\\views\\product\\ProductListView\\index.js",[],"C:\\React\\material-kit-react-main\\src\\views\\customer\\CustomerListView\\index.js",[],"C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\index.js",[],"C:\\React\\material-kit-react-main\\src\\views\\settings\\SettingsView\\index.js",[],"C:\\React\\material-kit-react-main\\src\\components\\Page.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\EmployeeMaster\\BreadCrumList.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\EmployeeMaster\\Toolbar.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\EmployeeMaster\\TableList.js",["372","373","374"],"/* eslint-disable linebreak-style */\r\n/* eslint-disable object-curly-spacing */\r\n/* eslint-disable indent */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable object-curly-newline */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable no-irregular-whitespace */\r\n/* eslint-disable max-len */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable arrow-parens */\r\nimport React, { useReducer, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport MaterialTable from 'material-table';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function BasicExport() {\r\n  const { useState } = React;\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [values, setValues] = useState({\r\n    loadData: [],\r\n  });\r\n  const navigate = useNavigate();\r\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\r\n\r\n  const loadNewPage = (id) => {\r\n    navigate('/app/master/edit/department/' + id, { replace: true });\r\n  };\r\n  useEffect(() => {\r\n    const URL = localStorage.getItem('url');\r\n      axios.get(URL + 'api/employeeList')\r\n      .then(respomse => {\r\n        console.log(respomse);\r\n        values.loadData = respomse.data;\r\n        forceUpdate();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        alert('Internal Server error');\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <MaterialTable\r\n      style={{fontFamily: 'Roboto, Helvetica, Arial, sans-serif', padding: '10px', fontSize: '14px', maxHeight: '500px', overflowX: 'auto'}}\r\n      title=\"Employee List\"\r\n      columns={[\r\n        { title: 'ID', field: 'id' },\r\n        { title: 'Name', field: 'employee_name' },\r\n        { title: 'Working Status', field: 'working_status' },\r\n        { title: 'Site', field: 'site' },\r\n        { title: 'Department', field: 'department' },\r\n        { title: 'Designation', field: 'designation' },\r\n      ]}\r\n      data={values.loadData}     \r\n      onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))}   \r\n      options={{\r\n        exportButton: true,\r\n        filtering: false,\r\n        grouping: true,\r\n        // selection: true,\r\n        rowStyle: rowData => ({\r\n          backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF'\r\n        })\r\n      }}\r\n      actions={[\r\n        {\r\n          icon: 'edit',\r\n          tooltip: 'Edit Employee',\r\n          onClick: (event, rowData) => {\r\n            alert('You saved ' + rowData.name);\r\n          }\r\n        },\r\n        {\r\n          icon: 'keyboard_arrow_right',\r\n          position: 'row',\r\n          tooltip: 'View Employee',\r\n          onClick: (event, rowData) => {\r\n            alert('You saved ' + rowData.name);\r\n          }\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n}\r\n// import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import clsx from 'clsx';\r\n// import { lighten, makeStyles } from '@material-ui/core/styles';\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TablePagination from '@material-ui/core/TablePagination';\r\n// import TableRow from '@material-ui/core/TableRow';\r\n// import TableSortLabel from '@material-ui/core/TableSortLabel';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Tooltip from '@material-ui/core/Tooltip';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Switch from '@material-ui/core/Switch';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\n// import FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n\r\n// const rows = [\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//   createData('Donut', 452, 25.0, 51, 4.9),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0),\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n//   createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//   createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n//   createData('KitKat', 518, 26.0, 65, 7.0),\r\n//   createData('Lollipop', 392, 0.2, 98, 0.0),\r\n//   createData('Marshmallow', 318, 0, 81, 2.0),\r\n//   createData('Nougat', 360, 19.0, 9, 37.0),\r\n//   createData('Oreo', 437, 18.0, 63, 4.0),\r\n// ];\r\n\r\n// function descendingComparator(a, b, orderBy) {\r\n//   if (b[orderBy] < a[orderBy]) {\r\n//     return -1;\r\n//   }\r\n//   if (b[orderBy] > a[orderBy]) {\r\n//     return 1;\r\n//   }\r\n//   return 0;\r\n// }\r\n\r\n// function getComparator(order, orderBy) {\r\n//   return order === 'desc'\r\n//     ? (a, b) => descendingComparator(a, b, orderBy)\r\n//     : (a, b) => -descendingComparator(a, b, orderBy);\r\n// }\r\n\r\n// function stableSort(array, comparator) {\r\n//   const stabilizedThis = array.map((el, index) => [el, index]);\r\n//   stabilizedThis.sort((a, b) => {\r\n//     const order = comparator(a[0], b[0]);\r\n//     if (order !== 0) return order;\r\n//     return a[1] - b[1];\r\n//   });\r\n//   return stabilizedThis.map((el) => el[0]);\r\n// }\r\n\r\n// const headCells = [\r\n//   { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n//   { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n//   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n//   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n//   { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n// ];\r\n\r\n// function EnhancedTableHead(props) {\r\n//   const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n//   const createSortHandler = (property) => (event) => {\r\n//     onRequestSort(event, property);\r\n//   };\r\n\r\n//   return (\r\n//     <TableHead>\r\n//       <TableRow>\r\n//         <TableCell padding=\"checkbox\">\r\n//           <Checkbox\r\n//             indeterminate={numSelected > 0 && numSelected < rowCount}\r\n//             checked={rowCount > 0 && numSelected === rowCount}\r\n//             onChange={onSelectAllClick}\r\n//             inputProps={{ 'aria-label': 'select all desserts' }}\r\n//           />\r\n//         </TableCell>\r\n//         {headCells.map((headCell) => (\r\n//           <TableCell\r\n//             key={headCell.id}\r\n//             align={headCell.numeric ? 'right' : 'left'}\r\n//             padding={headCell.disablePadding ? 'none' : 'default'}\r\n//             sortDirection={orderBy === headCell.id ? order : false}\r\n//           >\r\n//             <TableSortLabel\r\n//               active={orderBy === headCell.id}\r\n//               direction={orderBy === headCell.id ? order : 'asc'}\r\n//               onClick={createSortHandler(headCell.id)}\r\n//             >\r\n//               {headCell.label}\r\n//               {orderBy === headCell.id ? (\r\n//                 <span className={classes.visuallyHidden}>\r\n//                   {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n//                 </span>\r\n//               ) : null}\r\n//             </TableSortLabel>\r\n//           </TableCell>\r\n//         ))}\r\n//       </TableRow>\r\n//     </TableHead>\r\n//   );\r\n// }\r\n\r\n// EnhancedTableHead.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n//   numSelected: PropTypes.number.isRequired,\r\n//   onRequestSort: PropTypes.func.isRequired,\r\n//   onSelectAllClick: PropTypes.func.isRequired,\r\n//   order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n//   orderBy: PropTypes.string.isRequired,\r\n//   rowCount: PropTypes.number.isRequired,\r\n// };\r\n\r\n// const useToolbarStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     paddingLeft: theme.spacing(2),\r\n//     paddingRight: theme.spacing(1),\r\n//   },\r\n//   highlight:\r\n//     theme.palette.type === 'light'\r\n//       ? {\r\n//           color: theme.palette.secondary.main,\r\n//           backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n//         }\r\n//       : {\r\n//           color: theme.palette.text.primary,\r\n//           backgroundColor: theme.palette.secondary.dark,\r\n//         },\r\n//   title: {\r\n//     flex: '1 1 100%',\r\n//   },\r\n// }));\r\n\r\n// const EnhancedTableToolbar = (props) => {\r\n//   const classes = useToolbarStyles();\r\n//   const { numSelected } = props;\r\n\r\n//   return (\r\n//     <Toolbar\r\n//       className={clsx(classes.root, {\r\n//         [classes.highlight]: numSelected > 0,\r\n//       })}\r\n//     >\r\n//       {numSelected > 0 ? (\r\n//         <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n//           {numSelected} \r\n//           selected\r\n//         </Typography>\r\n//       ) : (\r\n//         <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n//           Employee List\r\n//         </Typography>\r\n//       )}\r\n\r\n//       {numSelected > 0 ? (\r\n//         <Tooltip title=\"Delete\">\r\n//           <IconButton aria-label=\"delete\">\r\n//             <DeleteIcon />\r\n//           </IconButton>\r\n//         </Tooltip>\r\n//       ) : (\r\n//         <Tooltip title=\"Filter list\">\r\n//           <IconButton aria-label=\"filter list\">\r\n//             <FilterListIcon />\r\n//           </IconButton>\r\n//         </Tooltip>\r\n//       )}\r\n//     </Toolbar>\r\n//   );\r\n// };\r\n\r\n// EnhancedTableToolbar.propTypes = {\r\n//   numSelected: PropTypes.number.isRequired,\r\n// };\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     width: '100%',\r\n//   },\r\n//   paper: {\r\n//     width: '100%',\r\n//     marginBottom: theme.spacing(2),\r\n//   },\r\n//   table: {\r\n//     minWidth: 750,\r\n//   },\r\n//   visuallyHidden: {\r\n//     border: 0,\r\n//     clip: 'rect(0 0 0 0)',\r\n//     height: 1,\r\n//     margin: -1,\r\n//     overflow: 'hidden',\r\n//     padding: 0,\r\n//     position: 'absolute',\r\n//     top: 20,\r\n//     width: 1,\r\n//   },\r\n// }));\r\n\r\n// export default function EnhancedTable() {\r\n//   const classes = useStyles();\r\n//   const [order, setOrder] = React.useState('asc');\r\n//   const [orderBy, setOrderBy] = React.useState('calories');\r\n//   const [selected, setSelected] = React.useState([]);\r\n//   const [page, setPage] = React.useState(0);\r\n//   const [dense, setDense] = React.useState(false);\r\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n//   const handleRequestSort = (event, property) => {\r\n//     const isAsc = orderBy === property && order === 'asc';\r\n//     setOrder(isAsc ? 'desc' : 'asc');\r\n//     setOrderBy(property);\r\n//   };\r\n\r\n//   const handleSelectAllClick = (event) => {\r\n//     if (event.target.checked) {\r\n//       const newSelecteds = rows.map((n) => n.name);\r\n//       setSelected(newSelecteds);\r\n//       return;\r\n//     }\r\n//     setSelected([]);\r\n//   };\r\n\r\n//   const handleClick = (event, name) => {\r\n//     const selectedIndex = selected.indexOf(name);\r\n//     let newSelected = [];\r\n\r\n//     if (selectedIndex === -1) {\r\n//       newSelected = newSelected.concat(selected, name);\r\n//     } else if (selectedIndex === 0) {\r\n//       newSelected = newSelected.concat(selected.slice(1));\r\n//     } else if (selectedIndex === selected.length - 1) {\r\n//       newSelected = newSelected.concat(selected.slice(0, -1));\r\n//     } else if (selectedIndex > 0) {\r\n//       newSelected = newSelected.concat(\r\n//         selected.slice(0, selectedIndex),\r\n//         selected.slice(selectedIndex + 1),\r\n//       );\r\n//     }\r\n\r\n//     setSelected(newSelected);\r\n//   };\r\n\r\n//   const handleChangePage = (event, newPage) => {\r\n//     setPage(newPage);\r\n//   };\r\n\r\n//   const handleChangeRowsPerPage = (event) => {\r\n//     setRowsPerPage(parseInt(event.target.value, 10));\r\n//     setPage(0);\r\n//   };\r\n\r\n//   const handleChangeDense = (event) => {\r\n//     setDense(event.target.checked);\r\n//   };\r\n\r\n//   const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n//   const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Paper className={classes.paper}>\r\n//         <EnhancedTableToolbar numSelected={selected.length} />\r\n//         <TableContainer>\r\n//           <Table\r\n//             className={classes.table}\r\n//             aria-labelledby=\"tableTitle\"\r\n//             size={dense ? 'small' : 'medium'}\r\n//             aria-label=\"enhanced table\"\r\n//           >\r\n//             <EnhancedTableHead\r\n//               classes={classes}\r\n//               numSelected={selected.length}\r\n//               order={order}\r\n//               orderBy={orderBy}\r\n//               onSelectAllClick={handleSelectAllClick}\r\n//               onRequestSort={handleRequestSort}\r\n//               rowCount={rows.length}\r\n//             />\r\n//             <TableBody>\r\n//               {stableSort(rows, getComparator(order, orderBy))\r\n//                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n//                 .map((row, index) => {\r\n//                   const isItemSelected = isSelected(row.name);\r\n//                   const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n//                   return (\r\n//                     <TableRow\r\n//                       hover\r\n//                       onClick={(event) => handleClick(event, row.name)}\r\n//                       role=\"checkbox\"\r\n//                       aria-checked={isItemSelected}\r\n//                       tabIndex={-1}\r\n//                       key={row.name}\r\n//                       selected={isItemSelected}\r\n//                     >\r\n//                       <TableCell padding=\"checkbox\">\r\n//                         <Checkbox\r\n//                           checked={isItemSelected}\r\n//                           inputProps={{ 'aria-labelledby': labelId }}\r\n//                         />\r\n//                       </TableCell>\r\n//                       <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n//                         {row.name}\r\n//                       </TableCell>\r\n//                       <TableCell align=\"right\">{row.calories}</TableCell>\r\n//                       <TableCell align=\"right\">{row.fat}</TableCell>\r\n//                       <TableCell align=\"right\">{row.carbs}</TableCell>\r\n//                       <TableCell align=\"right\">{row.protein}</TableCell>\r\n//                     </TableRow>\r\n//                   );\r\n//                 })}\r\n//               {emptyRows > 0 && (\r\n//                 <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n//                   <TableCell colSpan={6} />\r\n//                 </TableRow>\r\n//               )}\r\n//             </TableBody>\r\n//           </Table>\r\n//         </TableContainer>\r\n//         <TablePagination\r\n//           rowsPerPageOptions={[5, 10, 30, 50, 80, 100, 150, 200]}\r\n//           component=\"div\"\r\n//           count={rows.length}\r\n//           rowsPerPage={rowsPerPage}\r\n//           page={page}\r\n//           onChangePage={handleChangePage}\r\n//           onChangeRowsPerPage={handleChangeRowsPerPage}\r\n//         />\r\n//       </Paper>\r\n//       <FormControlLabel\r\n//         control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n//         label=\"Dense padding\"\r\n//       />\r\n//     </div>\r\n//   );\r\n// }\r\n","C:\\React\\material-kit-react-main\\src\\views\\master\\GlobalView\\BreadCrum.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\GlobalView\\Tabs.js",[],"C:\\React\\material-kit-react-main\\src\\views\\settings\\SettingsView\\Password.js",[],"C:\\React\\material-kit-react-main\\src\\views\\settings\\SettingsView\\Notifications.js",[],"C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\TrafficByDevice.js",[],"C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\TotalCustomers.js",[],"C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\TotalProfit.js",[],"C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\TasksProgress.js",[],"C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\BreadCrum.js",[],"C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\Sales.js",[],"C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\LatestProducts.js",[],"C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\LatestOrders.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\EmployeeMaster\\Entry.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\EmployeeMaster\\sideOptions.js",[],"C:\\React\\material-kit-react-main\\src\\views\\account\\AccountView\\Profile.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\EmployeeMaster\\Form.js",[],"C:\\React\\material-kit-react-main\\src\\views\\reports\\DashboardView\\Budget.js",[],"C:\\React\\material-kit-react-main\\src\\views\\product\\ProductListView\\data.js",[],"C:\\React\\material-kit-react-main\\src\\views\\customer\\CustomerListView\\data.js",[],"C:\\React\\material-kit-react-main\\src\\views\\customer\\CustomerListView\\Results.js",[],"C:\\React\\material-kit-react-main\\src\\views\\customer\\CustomerListView\\Toolbar.js",[],"C:\\React\\material-kit-react-main\\src\\views\\product\\ProductListView\\ProductCard.js",[],"C:\\React\\material-kit-react-main\\src\\views\\product\\ProductListView\\Toolbar.js",[],"C:\\React\\material-kit-react-main\\src\\views\\account\\AccountView\\ProfileDetails.js",[],"C:\\React\\material-kit-react-main\\src\\layouts\\MainLayout\\TopBar.js",[],"C:\\React\\material-kit-react-main\\src\\layouts\\DashboardLayout\\TopBar.js",[],"C:\\React\\material-kit-react-main\\src\\utils\\getInitials.js",[],["375","376","377","378","379","380"],"C:\\React\\material-kit-react-main\\src\\layouts\\DashboardLayout\\NavBar\\index.js",[],"C:\\React\\material-kit-react-main\\src\\components\\Logo.js",[],"C:\\React\\material-kit-react-main\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\Entry.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\sideOptions.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\Form.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\Entry.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\Form.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\sideOptions.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\Entry.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\Form.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\sideOptions.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\listEmployee.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\TableList.js",["381"],"/* eslint-disable linebreak-style */\r\n/* eslint-disable object-curly-spacing */\r\n/* eslint-disable indent */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable object-curly-newline */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable no-irregular-whitespace */\r\n/* eslint-disable max-len */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable arrow-parens */\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport MaterialTable from 'material-table';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function BasicExport() {\r\n  const { useState } = React;\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [values, setValues] = useState({\r\n    loadData: [],\r\n  });\r\n  const navigate = useNavigate();\r\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\r\n\r\n  useEffect(() => {\r\n    const URL = localStorage.getItem('url');\r\n      axios.get(URL + 'api/siteList')\r\n      .then(respomse => {\r\n        console.log(respomse);\r\n        values.loadData = respomse.data;\r\n        forceUpdate();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        alert('Internal Server error');\r\n      });\r\n  }, []);\r\n\r\n  const loadNewPage = (id) => {\r\n    navigate('/app/master/edit/site/' + id, { replace: true });\r\n  };\r\n\r\n    return (\r\n      <MaterialTable\r\n        style={{fontFamily: 'Roboto, Helvetica, Arial, sans-serif', padding: '10px', fontSize: '14px', maxHeight: '500px', overflowX: 'auto'}}\r\n        title=\"Site List\"\r\n        columns={[\r\n          { title: 'ID', field: 'id' },\r\n          { title: 'Name', field: 'name' },\r\n        ]}\r\n        data={values.loadData}\r\n        // data={[\r\n        //   { id: 'Mehmet', name: 'Baran'},\r\n        // ]}     \r\n        onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))}   \r\n        options={{\r\n          exportButton: true,\r\n          filtering: false,\r\n          grouping: true,\r\n          // selection: true,\r\n          rowStyle: rowData => ({\r\n            backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF'\r\n          })\r\n        }}\r\n        actions={[\r\n          {\r\n            icon: 'edit',\r\n            tooltip: 'Edit Site',\r\n            onClick: (event, rowData) => {\r\n              loadNewPage(rowData.id);\r\n            }\r\n          },\r\n          // {\r\n          //   icon: 'keyboard_arrow_right',\r\n          //   position: 'row',\r\n          //   tooltip: 'View Site',\r\n          //   onClick: (event, rowData) => {\r\n          //     alert('You saved ' + rowData.id);\r\n          //   }\r\n          // },\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n","C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\Toolbar.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\BreadCrumList.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\listEmployee.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\TableList.js",["382"],"/* eslint-disable linebreak-style */\r\n/* eslint-disable object-curly-spacing */\r\n/* eslint-disable indent */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable object-curly-newline */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable no-irregular-whitespace */\r\n/* eslint-disable max-len */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable arrow-parens */\r\nimport React, {useReducer, useEffect} from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function BasicExport() {\r\n  const { useState } = React;\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [values, setValues] = useState({\r\n    loadData: [],\r\n  });\r\n  const navigate = useNavigate();\r\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\r\n\r\n  const loadNewPage = (id) => {\r\n    navigate('/app/master/edit/department/' + id, { replace: true });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const URL = localStorage.getItem('url');\r\n      axios.get(URL + 'api/departmentList')\r\n      .then(respomse => {\r\n        console.log(respomse);\r\n        values.loadData = respomse.data;\r\n        forceUpdate();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        alert('Internal Server error');\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <MaterialTable\r\n      style={{fontFamily: 'Roboto, Helvetica, Arial, sans-serif', padding: '10px', fontSize: '14px', maxHeight: '500px', overflowX: 'auto'}}\r\n      title=\"Department List\"\r\n      columns={[\r\n        { title: 'ID', field: 'id' },\r\n        { title: 'Name', field: 'name' },\r\n      ]}\r\n      data={values.loadData}     \r\n      onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))}   \r\n      options={{\r\n        exportButton: true,\r\n        filtering: false,\r\n        grouping: true,\r\n        // selection: true,\r\n        rowStyle: rowData => ({\r\n          backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF'\r\n        })\r\n      }}\r\n      actions={[\r\n        {\r\n          icon: 'edit',\r\n          tooltip: 'Edit Department',\r\n          onClick: (event, rowData) => {\r\n            loadNewPage(rowData.id);\r\n          }\r\n        },\r\n        // {\r\n        //   icon: 'keyboard_arrow_right',\r\n        //   position: 'row',\r\n        //   tooltip: 'View Department',\r\n        //   onClick: (event, rowData) => {\r\n        //     alert('You saved ' + rowData.id);\r\n        //   }\r\n        // },\r\n      ]}\r\n    />\r\n  );\r\n}\r\n","C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\Toolbar.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\BreadCrumList.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\listEmployee.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\BreadCrumList.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\Toolbar.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\TableList.js",["383"],"/* eslint-disable linebreak-style */\r\n/* eslint-disable object-curly-spacing */\r\n/* eslint-disable indent */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable object-curly-newline */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable no-irregular-whitespace */\r\n/* eslint-disable max-len */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable arrow-parens */\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport MaterialTable from 'material-table';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function BasicExport() {\r\n  const { useState } = React;\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n\r\n  const [values, setValues] = useState({\r\n    loadData: [],\r\n  });\r\n  const navigate = useNavigate();\r\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\r\n\r\n  const loadNewPage = (id) => {\r\n    navigate('/app/master/edit/designation/' + id, { replace: true });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const URL = localStorage.getItem('url');\r\n      axios.get(URL + 'api/designationList')\r\n      .then(respomse => {\r\n        console.log(respomse);\r\n        values.loadData = respomse.data;\r\n        forceUpdate();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        alert('Internal Server error');\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <MaterialTable\r\n      style={{fontFamily: 'Roboto, Helvetica, Arial, sans-serif', padding: '10px', fontSize: '14px', maxHeight: '500px', overflowX: 'auto'}}\r\n      title=\"Designation List\"\r\n      columns={[\r\n        { title: 'ID', field: 'id' },\r\n        { title: 'Name', field: 'name' },\r\n      ]}\r\n      data={values.loadData}     \r\n      onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))}   \r\n      options={{\r\n        exportButton: true,\r\n        filtering: false,\r\n        grouping: true,\r\n        // selection: true,\r\n        rowStyle: rowData => ({\r\n          backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF'\r\n        })\r\n      }}\r\n      actions={[\r\n        {\r\n          icon: 'edit',\r\n          tooltip: 'Edit Designation',\r\n          onClick: (event, rowData) => {\r\n            loadNewPage(rowData.id);\r\n          }\r\n        },\r\n        // {\r\n        //   icon: 'keyboard_arrow_right',\r\n        //   position: 'row',\r\n        //   tooltip: 'View Designation',\r\n        //   onClick: (event, rowData) => {\r\n        //     alert('You saved ' + rowData.id);\r\n        //   }\r\n        // },\r\n      ]}\r\n    />\r\n  );\r\n}\r\n// import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import clsx from 'clsx';\r\n// import { lighten, makeStyles } from '@material-ui/core/styles';\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TablePagination from '@material-ui/core/TablePagination';\r\n// import TableRow from '@material-ui/core/TableRow';\r\n// import TableSortLabel from '@material-ui/core/TableSortLabel';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Tooltip from '@material-ui/core/Tooltip';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Switch from '@material-ui/core/Switch';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\n// import FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n\r\n// const rows = [\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//   createData('Donut', 452, 25.0, 51, 4.9),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0),\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n//   createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//   createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n//   createData('KitKat', 518, 26.0, 65, 7.0),\r\n//   createData('Lollipop', 392, 0.2, 98, 0.0),\r\n//   createData('Marshmallow', 318, 0, 81, 2.0),\r\n//   createData('Nougat', 360, 19.0, 9, 37.0),\r\n//   createData('Oreo', 437, 18.0, 63, 4.0),\r\n// ];\r\n\r\n// function descendingComparator(a, b, orderBy) {\r\n//   if (b[orderBy] < a[orderBy]) {\r\n//     return -1;\r\n//   }\r\n//   if (b[orderBy] > a[orderBy]) {\r\n//     return 1;\r\n//   }\r\n//   return 0;\r\n// }\r\n\r\n// function getComparator(order, orderBy) {\r\n//   return order === 'desc'\r\n//     ? (a, b) => descendingComparator(a, b, orderBy)\r\n//     : (a, b) => -descendingComparator(a, b, orderBy);\r\n// }\r\n\r\n// function stableSort(array, comparator) {\r\n//   const stabilizedThis = array.map((el, index) => [el, index]);\r\n//   stabilizedThis.sort((a, b) => {\r\n//     const order = comparator(a[0], b[0]);\r\n//     if (order !== 0) return order;\r\n//     return a[1] - b[1];\r\n//   });\r\n//   return stabilizedThis.map((el) => el[0]);\r\n// }\r\n\r\n// const headCells = [\r\n//   { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n//   { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n//   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n//   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n//   { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n// ];\r\n\r\n// function EnhancedTableHead(props) {\r\n//   const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n//   const createSortHandler = (property) => (event) => {\r\n//     onRequestSort(event, property);\r\n//   };\r\n\r\n//   return (\r\n//     <TableHead>\r\n//       <TableRow>\r\n//         <TableCell padding=\"checkbox\">\r\n//           <Checkbox\r\n//             indeterminate={numSelected > 0 && numSelected < rowCount}\r\n//             checked={rowCount > 0 && numSelected === rowCount}\r\n//             onChange={onSelectAllClick}\r\n//             inputProps={{ 'aria-label': 'select all desserts' }}\r\n//           />\r\n//         </TableCell>\r\n//         {headCells.map((headCell) => (\r\n//           <TableCell\r\n//             key={headCell.id}\r\n//             align={headCell.numeric ? 'right' : 'left'}\r\n//             padding={headCell.disablePadding ? 'none' : 'default'}\r\n//             sortDirection={orderBy === headCell.id ? order : false}\r\n//           >\r\n//             <TableSortLabel\r\n//               active={orderBy === headCell.id}\r\n//               direction={orderBy === headCell.id ? order : 'asc'}\r\n//               onClick={createSortHandler(headCell.id)}\r\n//             >\r\n//               {headCell.label}\r\n//               {orderBy === headCell.id ? (\r\n//                 <span className={classes.visuallyHidden}>\r\n//                   {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n//                 </span>\r\n//               ) : null}\r\n//             </TableSortLabel>\r\n//           </TableCell>\r\n//         ))}\r\n//       </TableRow>\r\n//     </TableHead>\r\n//   );\r\n// }\r\n\r\n// EnhancedTableHead.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n//   numSelected: PropTypes.number.isRequired,\r\n//   onRequestSort: PropTypes.func.isRequired,\r\n//   onSelectAllClick: PropTypes.func.isRequired,\r\n//   order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n//   orderBy: PropTypes.string.isRequired,\r\n//   rowCount: PropTypes.number.isRequired,\r\n// };\r\n\r\n// const useToolbarStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     paddingLeft: theme.spacing(2),\r\n//     paddingRight: theme.spacing(1),\r\n//   },\r\n//   highlight:\r\n//     theme.palette.type === 'light'\r\n//       ? {\r\n//           color: theme.palette.secondary.main,\r\n//           backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n//         }\r\n//       : {\r\n//           color: theme.palette.text.primary,\r\n//           backgroundColor: theme.palette.secondary.dark,\r\n//         },\r\n//   title: {\r\n//     flex: '1 1 100%',\r\n//   },\r\n// }));\r\n\r\n// const EnhancedTableToolbar = (props) => {\r\n//   const classes = useToolbarStyles();\r\n//   const { numSelected } = props;\r\n\r\n//   return (\r\n//     <Toolbar\r\n//       className={clsx(classes.root, {\r\n//         [classes.highlight]: numSelected > 0,\r\n//       })}\r\n//     >\r\n//       {numSelected > 0 ? (\r\n//         <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n//           {numSelected} \r\n//           selected\r\n//         </Typography>\r\n//       ) : (\r\n//         <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n//           Employee List\r\n//         </Typography>\r\n//       )}\r\n\r\n//       {numSelected > 0 ? (\r\n//         <Tooltip title=\"Delete\">\r\n//           <IconButton aria-label=\"delete\">\r\n//             <DeleteIcon />\r\n//           </IconButton>\r\n//         </Tooltip>\r\n//       ) : (\r\n//         <Tooltip title=\"Filter list\">\r\n//           <IconButton aria-label=\"filter list\">\r\n//             <FilterListIcon />\r\n//           </IconButton>\r\n//         </Tooltip>\r\n//       )}\r\n//     </Toolbar>\r\n//   );\r\n// };\r\n\r\n// EnhancedTableToolbar.propTypes = {\r\n//   numSelected: PropTypes.number.isRequired,\r\n// };\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     width: '100%',\r\n//   },\r\n//   paper: {\r\n//     width: '100%',\r\n//     marginBottom: theme.spacing(2),\r\n//   },\r\n//   table: {\r\n//     minWidth: 750,\r\n//   },\r\n//   visuallyHidden: {\r\n//     border: 0,\r\n//     clip: 'rect(0 0 0 0)',\r\n//     height: 1,\r\n//     margin: -1,\r\n//     overflow: 'hidden',\r\n//     padding: 0,\r\n//     position: 'absolute',\r\n//     top: 20,\r\n//     width: 1,\r\n//   },\r\n// }));\r\n\r\n// export default function EnhancedTable() {\r\n//   const classes = useStyles();\r\n//   const [order, setOrder] = React.useState('asc');\r\n//   const [orderBy, setOrderBy] = React.useState('calories');\r\n//   const [selected, setSelected] = React.useState([]);\r\n//   const [page, setPage] = React.useState(0);\r\n//   const [dense, setDense] = React.useState(false);\r\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n//   const handleRequestSort = (event, property) => {\r\n//     const isAsc = orderBy === property && order === 'asc';\r\n//     setOrder(isAsc ? 'desc' : 'asc');\r\n//     setOrderBy(property);\r\n//   };\r\n\r\n//   const handleSelectAllClick = (event) => {\r\n//     if (event.target.checked) {\r\n//       const newSelecteds = rows.map((n) => n.name);\r\n//       setSelected(newSelecteds);\r\n//       return;\r\n//     }\r\n//     setSelected([]);\r\n//   };\r\n\r\n//   const handleClick = (event, name) => {\r\n//     const selectedIndex = selected.indexOf(name);\r\n//     let newSelected = [];\r\n\r\n//     if (selectedIndex === -1) {\r\n//       newSelected = newSelected.concat(selected, name);\r\n//     } else if (selectedIndex === 0) {\r\n//       newSelected = newSelected.concat(selected.slice(1));\r\n//     } else if (selectedIndex === selected.length - 1) {\r\n//       newSelected = newSelected.concat(selected.slice(0, -1));\r\n//     } else if (selectedIndex > 0) {\r\n//       newSelected = newSelected.concat(\r\n//         selected.slice(0, selectedIndex),\r\n//         selected.slice(selectedIndex + 1),\r\n//       );\r\n//     }\r\n\r\n//     setSelected(newSelected);\r\n//   };\r\n\r\n//   const handleChangePage = (event, newPage) => {\r\n//     setPage(newPage);\r\n//   };\r\n\r\n//   const handleChangeRowsPerPage = (event) => {\r\n//     setRowsPerPage(parseInt(event.target.value, 10));\r\n//     setPage(0);\r\n//   };\r\n\r\n//   const handleChangeDense = (event) => {\r\n//     setDense(event.target.checked);\r\n//   };\r\n\r\n//   const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n//   const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Paper className={classes.paper}>\r\n//         <EnhancedTableToolbar numSelected={selected.length} />\r\n//         <TableContainer>\r\n//           <Table\r\n//             className={classes.table}\r\n//             aria-labelledby=\"tableTitle\"\r\n//             size={dense ? 'small' : 'medium'}\r\n//             aria-label=\"enhanced table\"\r\n//           >\r\n//             <EnhancedTableHead\r\n//               classes={classes}\r\n//               numSelected={selected.length}\r\n//               order={order}\r\n//               orderBy={orderBy}\r\n//               onSelectAllClick={handleSelectAllClick}\r\n//               onRequestSort={handleRequestSort}\r\n//               rowCount={rows.length}\r\n//             />\r\n//             <TableBody>\r\n//               {stableSort(rows, getComparator(order, orderBy))\r\n//                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n//                 .map((row, index) => {\r\n//                   const isItemSelected = isSelected(row.name);\r\n//                   const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n//                   return (\r\n//                     <TableRow\r\n//                       hover\r\n//                       onClick={(event) => handleClick(event, row.name)}\r\n//                       role=\"checkbox\"\r\n//                       aria-checked={isItemSelected}\r\n//                       tabIndex={-1}\r\n//                       key={row.name}\r\n//                       selected={isItemSelected}\r\n//                     >\r\n//                       <TableCell padding=\"checkbox\">\r\n//                         <Checkbox\r\n//                           checked={isItemSelected}\r\n//                           inputProps={{ 'aria-labelledby': labelId }}\r\n//                         />\r\n//                       </TableCell>\r\n//                       <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n//                         {row.name}\r\n//                       </TableCell>\r\n//                       <TableCell align=\"right\">{row.calories}</TableCell>\r\n//                       <TableCell align=\"right\">{row.fat}</TableCell>\r\n//                       <TableCell align=\"right\">{row.carbs}</TableCell>\r\n//                       <TableCell align=\"right\">{row.protein}</TableCell>\r\n//                     </TableRow>\r\n//                   );\r\n//                 })}\r\n//               {emptyRows > 0 && (\r\n//                 <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n//                   <TableCell colSpan={6} />\r\n//                 </TableRow>\r\n//               )}\r\n//             </TableBody>\r\n//           </Table>\r\n//         </TableContainer>\r\n//         <TablePagination\r\n//           rowsPerPageOptions={[5, 10, 30, 50, 80, 100, 150, 200]}\r\n//           component=\"div\"\r\n//           count={rows.length}\r\n//           rowsPerPage={rowsPerPage}\r\n//           page={page}\r\n//           onChangePage={handleChangePage}\r\n//           onChangeRowsPerPage={handleChangeRowsPerPage}\r\n//         />\r\n//       </Paper>\r\n//       <FormControlLabel\r\n//         control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n//         label=\"Dense padding\"\r\n//       />\r\n//     </div>\r\n//   );\r\n// }\r\n","C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\Edit.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\EditForm.js",["384"],"/* eslint-disable linebreak-style */\r\n/* eslint-disable object-curly-spacing */\r\n/* eslint-disable indent */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable object-curly-newline */\r\n/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable react/jsx-indent-props */\r\n/* eslint-disable react/jsx-indent */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/jsx-fragments */\r\n/* eslint-disable no-restricted-globals */\r\n/* eslint-disable arrow-parens */\r\n/* eslint-disable no-unneeded-ternary */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable react/no-this-in-sfc */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable prefer-destructuring */\r\nimport 'date-fns';\r\nimport React, { useState, useEffect, useReducer } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport { Form, replace } from 'formik';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport useForceUpdate from 'use-force-update';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst EditForm = ({ props, className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n  });\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const [options, setOptions] = React.useState([]);\r\n  const loading = open && options.length === 0;\r\n\r\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\r\n\r\n  const [checkState, setCheckState] = React.useState({\r\n    fillPaddress: false,\r\n  });\r\n\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  // const navigate = useNavigate();\r\n  // const ListData = () => {\r\n  //   navigate('/app/master/list/employee', { replace: true });\r\n  // };\r\n\r\n  const CheckValue = (e) => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.checked\r\n    });\r\n  };\r\n\r\n  // Getting value from location\r\n  let getIdExplode = [];\r\n  let getId = '';\r\n  const location = useLocation();\r\n  const currentPath = location.pathname;\r\n  getIdExplode = currentPath.split('/');\r\n  getId = getIdExplode[5];\r\n\r\n  const OnLoad = () => {\r\n    useEffect(() => {\r\n        const URL = localStorage.getItem('url');\r\n          axios.get(URL + 'api/site-update-list/' + getId)\r\n          .then(respomse => {\r\n            console.log(respomse);\r\n            values.name = respomse.data.name;\r\n            forceUpdate();\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            alert('Internal Server error');\r\n          });\r\n      }, []);\r\n};\r\n\r\nOnLoad();\r\n\r\n  const SendData = event => {\r\n    event.preventDefault();\r\n    // switch icon\r\n    setClicked(true);\r\n\r\n    let URL = localStorage.getItem('url');\r\n    axios.post(URL + 'api/site-update/' + getId, values)\r\n      .then(respomse => {\r\n        console.log(respomse);\r\n        if (respomse.status === 200) {\r\n\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Your work has been updated',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          });\r\n\r\n        }\r\n        if (respomse.data.status === 'exist') {\r\n\r\n          Swal.fire({\r\n            icon: 'info',\r\n            title: 'Already exist',\r\n            text: 'Enter new one',\r\n            timer: 2000,\r\n            // footer: '<a href>Why do I have this issue?</a>'\r\n          });\r\n\r\n        }\r\n        // switch icon\r\n        setClicked(false);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Internal server error',\r\n          text: 'Something went wrong!',\r\n          timer: 3000,\r\n          // footer: '<a href>Why do I have this issue?</a>'\r\n        });\r\n\r\n        // switch icon\r\n        setClicked(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"false\"\r\n      Validate\r\n      onSubmit={SendData}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Make sure to fill all fields marked with *\"\r\n          title=\"Edit Site\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={12}\r\n              xs={12}\r\n            >\r\n              <Typography variant=\"body1\">\r\n                <b>Information</b>\r\n              </Typography>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify name\"\r\n                label=\"Site name\"\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"danger\"\r\n            type=\"submit\"\r\n            variant=\"\"\r\n            startIcon={\r\n              clicked === true\r\n              ? <CircularProgress style={{color: 'green'}} size={20} />\r\n              : <SaveIcon style={{color: 'green'}} />\r\n            }\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nEditForm.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default EditForm;\r\n\r\n","C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\EditBreadcrumbs.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\SiteMaster\\EditTollbar.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\Edit.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\EditForm.js",["385"],"/* eslint-disable linebreak-style */\r\n/* eslint-disable object-curly-spacing */\r\n/* eslint-disable indent */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable object-curly-newline */\r\n/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable react/jsx-indent-props */\r\n/* eslint-disable react/jsx-indent */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/jsx-fragments */\r\n/* eslint-disable no-restricted-globals */\r\n/* eslint-disable arrow-parens */\r\n/* eslint-disable no-unneeded-ternary */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable react/no-this-in-sfc */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable prefer-destructuring */\r\nimport 'date-fns';\r\nimport React, { useState, useEffect, useReducer } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport { Form, replace } from 'formik';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport useForceUpdate from 'use-force-update';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst EditForm = ({ props, className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n  });\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const [options, setOptions] = React.useState([]);\r\n  const loading = open && options.length === 0;\r\n\r\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\r\n\r\n  const [checkState, setCheckState] = React.useState({\r\n    fillPaddress: false,\r\n  });\r\n\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  // const navigate = useNavigate();\r\n  // const ListData = () => {\r\n  //   navigate('/app/master/list/employee', { replace: true });\r\n  // };\r\n\r\n  const CheckValue = (e) => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.checked\r\n    });\r\n  };\r\n\r\n  // Getting value from location\r\n  let getIdExplode = [];\r\n  let getId = '';\r\n  const location = useLocation();\r\n  const currentPath = location.pathname;\r\n  getIdExplode = currentPath.split('/');\r\n  getId = getIdExplode[5];\r\n\r\n  const OnLoad = () => {\r\n    useEffect(() => {\r\n        const URL = localStorage.getItem('url');\r\n          axios.get(URL + 'api/department-update-list/' + getId)\r\n          .then(respomse => {\r\n            console.log(respomse);\r\n            values.name = respomse.data.name;\r\n            forceUpdate();\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            alert('Internal Server error');\r\n          });\r\n      }, []);\r\n};\r\n\r\nOnLoad();\r\n\r\n  const SendData = event => {\r\n    event.preventDefault();\r\n    // switch icon\r\n    setClicked(true);\r\n\r\n    let URL = localStorage.getItem('url');\r\n    axios.post(URL + 'api/department-update/' + getId, values)\r\n      .then(respomse => {\r\n        console.log(respomse);\r\n        if (respomse.status === 200) {\r\n\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Your work has been updated',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          });\r\n\r\n        }\r\n        if (respomse.data.status === 'exist') {\r\n\r\n          Swal.fire({\r\n            icon: 'info',\r\n            title: 'Already exist',\r\n            text: 'Enter new one',\r\n            timer: 2000,\r\n            // footer: '<a href>Why do I have this issue?</a>'\r\n          });\r\n\r\n        }\r\n        // switch icon\r\n        setClicked(false);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Internal server error',\r\n          text: 'Something went wrong!',\r\n          timer: 3000,\r\n          // footer: '<a href>Why do I have this issue?</a>'\r\n        });\r\n\r\n        // switch icon\r\n        setClicked(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"false\"\r\n      Validate\r\n      onSubmit={SendData}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Make sure to fill all fields marked with *\"\r\n          title=\"Create Department\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={12}\r\n              xs={12}\r\n            >\r\n              <Typography variant=\"body1\">\r\n                <b>Information</b>\r\n              </Typography>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify name\"\r\n                label=\"Department name\"\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"danger\"\r\n            type=\"submit\"\r\n            variant=\"\"\r\n            startIcon={\r\n              clicked === true\r\n              ? <CircularProgress style={{color: 'green'}} size={20} />\r\n              : <SaveIcon style={{color: 'green'}} />\r\n            }\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nEditForm.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default EditForm;\r\n\r\n","C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\EditBreadcrumbs.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DepartmentMaster\\EditTollbar.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\Edit.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\EditTollbar.js",[],"C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\EditForm.js",["386"],"/* eslint-disable linebreak-style */\r\n/* eslint-disable object-curly-spacing */\r\n/* eslint-disable indent */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable object-curly-newline */\r\n/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable react/jsx-indent-props */\r\n/* eslint-disable react/jsx-indent */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/jsx-fragments */\r\n/* eslint-disable no-restricted-globals */\r\n/* eslint-disable arrow-parens */\r\n/* eslint-disable no-unneeded-ternary */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable react/no-this-in-sfc */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable prefer-destructuring */\r\nimport 'date-fns';\r\nimport React, { useState, useEffect, useReducer } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport { Form, replace } from 'formik';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport useForceUpdate from 'use-force-update';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst EditForm = ({ props, className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n  });\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const [options, setOptions] = React.useState([]);\r\n  const loading = open && options.length === 0;\r\n\r\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\r\n\r\n  const [checkState, setCheckState] = React.useState({\r\n    fillPaddress: false,\r\n  });\r\n\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  // const navigate = useNavigate();\r\n  // const ListData = () => {\r\n  //   navigate('/app/master/list/employee', { replace: true });\r\n  // };\r\n\r\n  const CheckValue = (e) => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.checked\r\n    });\r\n  };\r\n\r\n  // Getting value from location\r\n  let getIdExplode = [];\r\n  let getId = '';\r\n  const location = useLocation();\r\n  const currentPath = location.pathname;\r\n  getIdExplode = currentPath.split('/');\r\n  getId = getIdExplode[5];\r\n\r\n  const OnLoad = () => {\r\n    useEffect(() => {\r\n        const URL = localStorage.getItem('url');\r\n          axios.get(URL + 'api/designation-update-list/' + getId)\r\n          .then(respomse => {\r\n            console.log(respomse);\r\n            values.name = respomse.data.name;\r\n            forceUpdate();\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            alert('Internal Server error');\r\n          });\r\n      }, []);\r\n};\r\n\r\nOnLoad();\r\n\r\n  const SendData = event => {\r\n    event.preventDefault();\r\n    // switch icon\r\n    setClicked(true);\r\n\r\n    let URL = localStorage.getItem('url');\r\n    axios.post(URL + 'api/designation-update/' + getId, values)\r\n      .then(respomse => {\r\n        console.log(respomse);\r\n        if (respomse.status === 200) {\r\n\r\n          Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Your work has been updated',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          });\r\n\r\n        }\r\n        if (respomse.data.status === 'exist') {\r\n\r\n          Swal.fire({\r\n            icon: 'info',\r\n            title: 'Already exist',\r\n            text: 'Enter new one',\r\n            timer: 2000,\r\n            // footer: '<a href>Why do I have this issue?</a>'\r\n          });\r\n\r\n        }\r\n        // switch icon\r\n        setClicked(false);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Internal server error',\r\n          text: 'Something went wrong!',\r\n          timer: 3000,\r\n          // footer: '<a href>Why do I have this issue?</a>'\r\n        });\r\n\r\n        // switch icon\r\n        setClicked(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"false\"\r\n      Validate\r\n      onSubmit={SendData}\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Make sure to fill all fields marked with *\"\r\n          title=\"Create Designation\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={12}\r\n              xs={12}\r\n            >\r\n              <Typography variant=\"body1\">\r\n                <b>Information</b>\r\n              </Typography>\r\n\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify name\"\r\n                label=\"Designation  name\"\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"danger\"\r\n            type=\"submit\"\r\n            variant=\"\"\r\n            startIcon={\r\n              clicked === true\r\n              ? <CircularProgress style={{color: 'green'}} size={20} />\r\n              : <SaveIcon style={{color: 'green'}} />\r\n            }\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nEditForm.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default EditForm;\r\n\r\n","C:\\React\\material-kit-react-main\\src\\views\\master\\DesignationMaster\\EditBreadcrumbs.js",[],{"ruleId":"387","replacedBy":"388"},{"ruleId":"389","replacedBy":"390"},{"ruleId":"391","replacedBy":"392"},{"ruleId":"393","replacedBy":"394"},{"ruleId":"395","replacedBy":"396"},{"ruleId":"397","replacedBy":"398"},{"ruleId":"399","severity":1,"message":"400","line":90,"column":11,"nodeType":"401","messageId":"402","endLine":90,"endColumn":29},{"ruleId":"399","severity":1,"message":"400","line":107,"column":9,"nodeType":"401","messageId":"402","endLine":107,"endColumn":39},{"ruleId":"399","severity":1,"message":"400","line":62,"column":9,"nodeType":"401","messageId":"402","endLine":62,"endColumn":39},{"ruleId":"399","severity":1,"message":"400","line":94,"column":13,"nodeType":"401","messageId":"402","endLine":94,"endColumn":47},{"ruleId":"399","severity":1,"message":"400","line":102,"column":13,"nodeType":"401","messageId":"402","endLine":102,"endColumn":47},{"ruleId":"387","replacedBy":"403"},{"ruleId":"389","replacedBy":"404"},{"ruleId":"391","replacedBy":"405"},{"ruleId":"393","replacedBy":"406"},{"ruleId":"395","replacedBy":"407"},{"ruleId":"397","replacedBy":"408"},{"ruleId":"399","severity":1,"message":"400","line":59,"column":9,"nodeType":"401","messageId":"402","endLine":59,"endColumn":39},{"ruleId":"399","severity":1,"message":"400","line":42,"column":9,"nodeType":"401","messageId":"402","endLine":42,"endColumn":39},{"ruleId":"399","severity":1,"message":"400","line":64,"column":9,"nodeType":"401","messageId":"402","endLine":64,"endColumn":39},{"ruleId":"399","severity":1,"message":"400","line":117,"column":13,"nodeType":"401","messageId":"402","endLine":117,"endColumn":43},{"ruleId":"399","severity":1,"message":"400","line":117,"column":13,"nodeType":"401","messageId":"402","endLine":117,"endColumn":43},{"ruleId":"399","severity":1,"message":"400","line":117,"column":13,"nodeType":"401","messageId":"402","endLine":117,"endColumn":43},"lines-around-directive",["409"],"no-spaced-func",["410"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-alert","Unexpected alert.","CallExpression","unexpected",["409"],["410"],[],[],[],[],"padding-line-between-statements","func-call-spacing"]